
S12 := SymmetricGroup(12);

## M12 Mathieu group 5-transitive sporadic simple group 
# This session establishes 5-transitivity
# M12 > G1 > G2 > G3 > G4 > G5 =1
# Gi is the stabilizer of point i within the next larger group.



a := (1,2)(3,4)(5,7)(6,8)(9,11)(10,12);
b := (1,2,3)(4,5,6)(8,9,10);

M := Subgroup(S12,[a,b]);
# coset reps for G1, the stablizer of point 1:
# these map 1 to 1, 2, 3, ..., 12, respectively:
reps := [(), a, a*b, a*b*a, (a*b)^2, (a*b)^2*b, (a*b)^2*a, (a*b)^2*b*a, (a*b)^2 * b * a * b, (a*b)^2 * b * a * b^2, (a*b)^2 * (b*a)^2, (a*b)^2*b*a*b^2*a];

gens := [a,b];

# list of Schreier generators of G1
Print("Schreier generators of G1\n"); 
l := []; 
for xi in reps do
  for g in gens do
  #  this uses the fact that rep is ordered so that coset rep taking 1 to k is a t position k in reps: 
   Print("xi=",xi,"\n g=",g, "\n xi*g=",xi*g,"\n reps[xi*g]=",reps[1^(xi*g)],"\n");
   Print("xi * g * (reps[(xi * g)])^-1) = ", xi * g * (reps[ 1 ^ (xi * g)])^-1, "\n\n");  
   Add(l,xi * g * (reps[ 1 ^ (xi * g)])^-1) ; 
  od;
od;

Print("List of Schreier generators of G1\n"); Print(l, "\n");

G1 := Subgroup(S12,l);
IsTransitive(G1);
Size(G1);

# nontrivial Schreirer generators of G1
y := [ l[2], l[6], l[14], l[22], l[24]];
# Jerrum's filter : can replace y[5]=l[24] by h in generators of G1; 
h := y[2] * y[4] * ((y[5])^-1);
# process ends so don't bother



# coset reps of point-stabilizer G2 of point  2 in G1
reps2 := [(), y[2], y[1], y[1]^3, y[2]^2, y[1]^2, y[3], y[2]^5, y[5], y[1]^5, y[3]^2];




# list of Schreier generators of G2
Print("Schreier generators of G2\n"); 
l2 := []; 
for xi in reps2 do
  for g in y  do
  #  this uses the fact that rep is ordered so that coset rep taking 1 to k is a t position k in reps: 
   Print("xi=",xi,"\n g=",g, "\n xi*g=",xi*g,"\n reps2[xi*g]=",reps2[2^(xi*g) - 1],"\n");
   Print("xi * g * (reps2[(xi * g)])^-1) = ", xi * g * (reps2[ 2 ^ (xi * g) - 1])^-1, "\n\n");  
   Add(l2,xi * g * (reps2[ 2 ^ (xi * g) - 1])^-1) ; 
  od;
od;

Print("List of Scheier generators of G2\n"); Print(l2, "\n");

l2 := DuplicateFreeList(l2);
Remove(l2,1);

G2 := Subgroup(S12,l2);

z := l2;

reps3 := [(), z[4],z[4]*z[5], z[7], z[14], z[6], z[25], z[1], z[2], z[3]];





# list of Schreier generators of G3
Print("Schreier generators of G3\n");
l3 := [];
for xi in reps3 do
  for g in z  do
  #  this uses the fact that rep is ordered so that coset rep taking 1 to k is a t position k in reps:
   Print("xi=",xi,"\n g=",g, "\n xi*g=",xi*g,"\n reps3[xi*g]=",reps3[3^(xi*g) - 2],"\n");
   Print("xi * g * (reps3[(xi * g)])^-1) = ", xi * g * (reps3[ 3 ^ (xi * g) - 2])^-1, "\n\n");
   Add(l3,xi * g * (reps3[ 3 ^ (xi * g) - 2])^-1) ;
  od;
od;

Print("List of Scheier generators of G3\n"); Print(l3, "\n");

l3 := DuplicateFreeList(l3);

Remove(l3,1);

G3 := Subgroup(S12,l3);

zz := l3;

#coset reps of stablizer G4 of 4 in G3:
reps4 := [(), zz[3], zz[1], zz[9], zz[7], zz[4], zz[68], zz[5], zz[12]];
  



# list of Schreier generators of G4
Print("Schreier generators of G4\n");
l4 := [];
for xi in reps4 do
  for g in zz do
  #  this uses the fact that rep is ordered so that coset rep taking 1 to k is a t position k in reps:
   Print("xi=",xi,"\n g=",g, "\n xi*g=",xi*g,"\n reps4[xi*g]=",reps4[4^(xi*g) - 3],"\n");
   Print("xi * g * (reps4[(xi * g)])^-1) = ", xi * g * (reps4[ 4 ^ (xi * g) - 3])^-1, "\n\n");
   Add(l4,xi * g * (reps4[ 4 ^ (xi * g) - 3])^-1) ;
  od;
od;

Print("List of Scheier generators of G4\n"); Print(l4, "\n");

l4 := DuplicateFreeList(l4);
Remove(l4,1);

G4 := Subgroup(S12,l4);

za := l4;

reps5 := [(), za[4], za[7], za[2], za[5], za[3], za[1], za[6]]; 


# list of Schreier generators of G5
Print("Schreier generators of G5\n");
l5 := [];
for xi in reps5 do
  for g in za do
  #  this uses the fact that rep is ordered so that coset rep taking 1 to k is a t position k in reps:
   Print("xi=",xi,"\n g=",g, "\n xi*g=",xi*g,"\n reps5[xi*g]=",reps5[5^(xi*g) - 4],"\n");
   Print("xi * g * (reps5[(xi * g)])^-1) = ", xi * g * (reps5[ 5 ^ (xi * g) - 4])^-1, "\n\n");
   Add(l5,xi * g * (reps5[ 5 ^ (xi * g) - 4])^-1) ;
  od;
od;

Print("List of Scheier generators of G5\n"); Print(l5, "\n");

l5 := DuplicateFreeList(l5);

# G5 (generated by l5) is trivial.



StructureDescription(G4);
StructureDescription(G3);
StructureDescription(G2);
StructureDescription(G1);
StructureDescription(M); 

